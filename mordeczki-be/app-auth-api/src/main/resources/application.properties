
spring.webflux.server.port=8080

spring.jackson.visibility.field=ANY
spring.jackson.visibility.getter=NONE
spring.jackson.visibility.is-getter=NONE


# Hibernate properties
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=public


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.globally_quoted_identifiers=true


datasource.url=${DB_URL}
datasource.username=${DB_USERNAME}
datasource.password=${DB_PASSWORD}
datasource.driver=${DB_DRIVER}

#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer

kafka.bootstrapAddress=${KAFKA_ADDRESS}
kafka.topicRegisteredUser=registered_user
kafka.topicResetPassword=reset_pass_request